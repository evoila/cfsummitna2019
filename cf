#!/bin/bash

set -e -o pipefail

function deploy() {
    local pipeline=$1
    local git_rev=$2

    if [[ ! -d .cd ]]; then
        mkdir .cd
    fi

    BUILDPACK=$(cf curl /v2/buildpacks/$(cf curl "/v2/apps?q=name:${APP_NAME}" | jq '.resources[0].entity.detected_buildpack_guid' -r) | jq '.entity.name' -r)

    BUILDPACK_PIPELINE="${BUILDPACK}-pipeline.yml"

    PIPELINE=".cd/${BUILDPACK_PIPELINE}"
    #touch "${PIPELINE}"
    curl "https://raw.githubusercontent.com/evoila/cfsummitna2019/master/${BUILDPACK_PIPELINE}" -o "${PIPELINE}"

    fly -t gstack login -k -u cbrinker@evoila.de -p gst4ckr0cks
    fly -t gstack set-pipeline -n -p "${pipeline}" -c "${PIPELINE}" \
        -v cf_username="${CF_USERNAME}" \
        -v cf_password="${CF_PASSWORD}" \
        -v cf_api="${CF_API}" \
        -v app_name="${APP_NAME}" \
        -v git_url="${GIT_URL}" \
        -v cf_org="${CF_ORG}" \
        -v cf_space="${CF_SPACE}" \
        -v git_rev="${git_rev}"
}

if [[ $1 == 'careless-delivery' || $1 == 'cd' ]]; then
    if [[ $2 == '-h' || $2 == '--help' ]]; then
        echo 'NAME:
   careless-delivery - create a careless continuous delivery experience for an already pushed app

USAGE:
   cf careless-delivery APP_NAME 

ALIAS:
   cd

OPTIONS:

ENVIRONMENT:
   CF_USERNAME        Username for the pipeline to access the app deployed to Cloud Foundry 
   CF_PASSWORD        Password for the pipeline to access the app deployed to Cloud Foundry 

SEE ALSO:
   push'
        exit 0
    fi

    GIT_URL=$(git remote -v | awk '{print $2}' | head -n 1)
    APP_NAME="$2"
    CF_API=$(cf t | grep "^api endpoint:" | awk '{print $3}')
    CF_ORG=$(cf t | grep "^org:" | awk '{print $2}')
    CF_SPACE=$(cf t | grep "^space:" | awk '{print $2}')

    GIT_COMMIT=$(git rev-parse HEAD)

    deploy "${APP_NAME}" "${GIT_COMMIT}"

elif [[ $1 == spin-up-prod || $1 == sup ]]; then
    if [[ $2 == '-h' || $2 == '--help' ]]; then
        echo 'NAME:
   spin-up-prod - create a careless continuous delivery experience to bring your application to production for an already pushed app

USAGE:
   cf spin-up-prod APP_NAME 

ALIAS:
   sup

OPTIONS:
   -o                 Organisation to deploy the productive app to (optional).
   -s                 Space to deploy the productive app to (optional).

ENVIRONMENT:
   CF_USERNAME        Username for the pipeline to access the app deployed to Cloud Foundry 
   CF_PASSWORD        Password for the pipeline to access the app deployed to Cloud Foundry 

SEE ALSO:
   push'
        exit 0
    fi

    APP_NAME="$2"

    if [[ $3 == '-o' ]]; then
        CF_ORG=$4
        shift 2
    else
        CF_ORG=$(cf t | grep "^org:" | awk '{print $2}')
    fi

    if [[ $3 == '-s' ]]; then
        CF_SPACE=$4
    else
        CF_SPACE=$(cf t | grep "^space:" | awk '{print $2}')
        APP_NAME="${2}-prod"
    fi

    GIT_URL=$(git remote -v | awk '{print $2}' | head -n 1)
    CF_API=$(cf t | grep "^api endpoint:" | awk '{print $3}')

    GIT_REV=$(cf curl "/v2/apps?q=name:${APP_NAME}" | jq '.resources[0].entity.environment_json.GIT_REV' -r)
    if [[ -z "${GIT_REV}" || "${GIT_REV}" == "null" ]]; then
        GIT_REV=$(git rev-parse HEAD)
    fi

    deploy "${APP_NAME}-prod" "${GIT_REV}"
else
    cf "$@"
fi